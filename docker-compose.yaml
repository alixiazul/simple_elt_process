services:
  source_postgres:
    image: postgres:9.3 # Use this version (or greater) that have the pg_matviews tables needed for the dbt service and doesn't have any issue with "pg_dump"
    ports:
      - "5433:5432"
    networks:
      - elt_network
    env_file:
      - .env.source
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql

  destination_postgres:
    image: postgres:9.3 # Use this version (or greater) that have the pg_matviews tables needed for the dbt service and doesn't have any issue with "pg_dump"
    ports:
      - "5434:5432"
    networks:
      - elt_network
    env_file:
      - .env.destination

  elt_script:
    build:
      dockerfile: Dockerfile
    command: ["python", "elt_script.py"]
    networks:
      - elt_network
    depends_on:
      - source_postgres
      - destination_postgres

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:latest
    command: [
      "run",
      "--profiles-dir",
      "/root",
      "--project-dir",
      "/dbt"
    ]
    networks:
      - elt_network
    volumes:
      - ./custom_postgres:/dbt
      - ~/.dbt:/root/
    depends_on:
      elt_script:
        condition: service_completed_successfully
    environment:
      DBT_PROFILE: default
      DBT_TARGET: dev

  postgres: # database for AirFlow to store its metadata and logs
    image: postgres:9.3
    networks:
      - elt_network
    env_file:
      - .env.airflow

  init-airflow:
    image: apache/airflow:latest
    depends_on:
      - postgres
    networks:
      - elt_network
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres/airflow
    command: >
      bash -c "airflow db migrate &&
              airflow users create --username airflow --password password --firstname John --lastname Doe --role Admin --email admin@example.com"

  webserver: # webserver for the UI of Airflow
    build:
      context: .
      dockerfile: Dockerfile.airflow
    user: root
    depends_on:
      - postgres
    networks:
      - elt_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/opt/dbt
      - ~/.dbt:/root/
      - /var/run/docker.sock:/var/run/docker.sock # Giving airflow access to the docker network    
    env_file:
      - .env.airflow
    ports:
      - "8080:8080"
    command: webserver

networks:
  elt_network:
    driver: bridge